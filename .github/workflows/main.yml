name: abz.agency devops test work

# Controls when the action will run. Invokes the workflow on push events but only for the main branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

#Set environment variables
env:
  AWS_REGION : "eu-west-1"
  S3_BUCKET  : ${{ vars.S3_BUCKET }} #bucket where to upload the artifact
  ARTIFACT_NAME : artifact_1.0.0._${{github.run_number}}.zip
  MYSQL_SECRET_ARN: ${{ vars.MYSQL_SECRET_ARN }}
  MYSQL_HOST: ${{ vars.MYSQL_HOST }}
  WORDPRESS_DB: ${{ vars.WORDPRESS_DB }}
  MYSQL_PORT: ${{ vars.MYSQL_PORT }}
  REDIS_URL: ${{ vars.REDIS_URL }}
  WORDPRESS_CREDENTIALS_SECRET_ARN: ${{ vars.WORDPRESS_CREDENTIALS_SECRET_ARN }}
  
  
permissions:
      id-token: write
      contents: read
jobs:
  build:
    name: Build package and download to S3 bucket
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create file to store environemt variables, this env variables will be used on host machine
        run: |
          echo "MYSQL_SECRET_ARN=$MYSQL_SECRET_ARN" > .env
          echo "MYSQL_HOST=$MYSQL_HOST" >> .env
          echo "WORDPRESS_DB=$WORDPRESS_DB" >> .env
          echo "MYSQL_PORT=$MYSQL_PORT" >> .env
          echo "REDIS_URL=$REDIS_URL" >> .env
          echo "WORDPRESS_CREDENTIALS_SECRET_ARN=$WORDPRESS_CREDENTIALS_SECRET_ARN" >> .env

      - name: Build artifact, create archive with required files
        run: |
          zip -r ${{env.ARTIFACT_NAME}} application/ scripts/ appspec.yml .env

      - name: Upload artifact to S3 bucket
        run: |
          aws s3 cp ${{env.ARTIFACT_NAME}} s3://${{ env.S3_BUCKET }}/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials, and initiate AWS CodeDeploy
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - run: |
         aws deploy create-deployment --application-name dev-wordpres-application --deployment-group-name dev-wordpress-deployment-group --s3-location bucket=${{env.S3_BUCKET}},bundleType=zip,key=${{env.ARTIFACT_NAME}} --ignore-application-stop-failures
